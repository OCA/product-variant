# Translation of OpenERP Server.
# This file contains the translation of the following modules:
#	* product_variant_multi
#
msgid ""
msgstr ""
"Project-Id-Version: OpenERP Server 5.0.15\n"
"Report-Msgid-Bugs-To: support@openerp.com\n"
"POT-Creation-Date: 2011-01-19 17:00:14+0000\n"
"PO-Revision-Date: 2011-01-19 17:00:14+0000\n"
"Last-Translator: <>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: product_variant_multi
#: view:product.variant.dimension.type:0
#: field:product.variant.dimension.value,price_extra:0
msgid "Sale Price Extra"
msgstr "Sale Price Extra"

#. module: product_variant_multi
#: constraint:ir.model:0
msgid "The Object name must start with x_ and not contain any special character !"
msgstr "The Object name must start with x_ and not contain any special character !"

#. module: product_variant_multi
#: view:product.template:0
msgid "Generate ->"
msgstr "Generate ->"

#. module: product_variant_multi
#: field:product.product,cost_price_extra:0
#: field:product.variant.dimension.value,cost_price_extra:0
msgid "Purchase Extra Cost"
msgstr "Purchase Extra Cost"

#. module: product_variant_multi
#: field:product.template,is_multi_variants:0
msgid "Is Multi Variants?"
msgstr "Is Multi Variants?"

#. module: product_variant_multi
#: field:product.variant.dimension.value,dimension_sequence:0
msgid "Related Dimension Sequence"
msgstr "Related Dimension Sequence"

#. module: product_variant_multi
#: help:product.template,code_generator:0
msgid "enter the model for the product code, all parameter between [_o.my_field_] will be replace by the product field. Example product_code model : prefix_[_o.variants_]_suffixe ==> result : prefix_2S2T_suffix"
msgstr "enter the model for the product code, all parameter between [_o.my_field_] will be replace by the product field. Example product_code model : prefix_[_o.variants_]_suffixe ==> result : prefix_2S2T_suffix"

#. module: product_variant_multi
#: field:product.variant.dimension.type,allow_custom_value:0
msgid "Allow Custom Value"
msgstr "Allow Custom Value"

#. module: product_variant_multi
#: help:product.variant.dimension.type,sequence:0
msgid "The product 'variants' code will use this to order the dimension values"
msgstr "The product 'variants' code will use this to order the dimension values"

#. module: product_variant_multi
#: view:product.template:0
msgid "Build Code ->"
msgstr "Build Code ->"

#. module: product_variant_multi
#: constraint:ir.actions.act_window:0
msgid "Invalid model name in the action definition."
msgstr "Invalid model name in the action definition."

#. module: product_variant_multi
#: field:product.product,dimension_value_ids:0
msgid "Dimensions"
msgstr "Dimensions"

#. module: product_variant_multi
#: model:ir.ui.menu,name:product_variant_multi.menu_variant_dimension_types
#: field:product.template,dimension_type_ids:0
msgid "Dimension Types"
msgstr "Dimension Types"

#. module: product_variant_multi
#: view:product.product:0
msgid "Template Sale Price"
msgstr "Template Sale Price"

#. module: product_variant_multi
#: view:product.product:0
#: field:product.variant.dimension.type,description:0
msgid "Description"
msgstr "Description"

#. module: product_variant_multi
#: field:product.template,code_generator:0
msgid "Code Generator"
msgstr "Code Generator"

#. module: product_variant_multi
#: help:product.variant.dimension.type,mandatory_dimension:0
msgid "If false, variant products will be created with and without this dimension"
msgstr "If false, variant products will be created with and without this dimension"

#. module: product_variant_multi
#: view:product.variant.dimension.type:0
#: field:product.variant.dimension.value,price_margin:0
msgid "Sale Price Margin"
msgstr "Sale Price Margin"

#. module: product_variant_multi
#: field:product.variant.dimension.type,mandatory_dimension:0
msgid "Mandatory Dimension"
msgstr "Mandatory Dimension"

#. module: product_variant_multi
#: help:product.template,variant_model_name:0
msgid "[NAME] will be replaced by the name of the dimension and [VALUE] by is value. Example of Variant Model Name : \"[NAME] - [VALUE]\""
msgstr "[NAME] will be replaced by the name of the dimension and [VALUE] by is value. Example of Variant Model Name : \"[NAME] - [VALUE]\""

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.action_dimension_type_form
msgid "Types"
msgstr "Types"

#. module: product_variant_multi
#: view:product.template:0
#: field:product.template,variant_ids:0
msgid "Variants"
msgstr "Variants"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.product_variant
#: model:ir.ui.menu,name:product_variant_multi.menu_variant
msgid "Product Variants"
msgstr "Product Variants"

#. module: product_variant_multi
#: model:ir.ui.menu,name:product_variant_multi.menu_variant_dimension_values
#: view:product.template:0
#: field:product.variant.dimension.type,value_ids:0
msgid "Dimension Values"
msgstr "Dimension Values"

#. module: product_variant_multi
#: view:product.template:0
msgid "Dimension types"
msgstr "Dimension types"

#. module: product_variant_multi
#: help:product.variant.dimension.type,allow_custom_value:0
msgid "If true, custom values can be entered in the product configurator"
msgstr "If true, custom values can be entered in the product configurator"

#. module: product_variant_multi
#: constraint:ir.ui.view:0
msgid "Invalid XML for View Architecture!"
msgstr "Invalid XML for View Architecture!"

#. module: product_variant_multi
#: view:product.product:0
msgid "Product Variant"
msgstr "Product Variant"

#. module: product_variant_multi
#: field:product.template,variant_model_name_separator:0
msgid "Variant Model Name Separator"
msgstr "Variant Model Name Separator"

#. module: product_variant_multi
#: view:product.template:0
#: view:product.variant.dimension.type:0
#: view:product.variant.dimension.value:0
msgid "Variant Value"
msgstr "Variant Value"

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_variant_dimension_value
#: field:product.variant.dimension.value,name:0
msgid "Dimension Value"
msgstr "Dimension Value"

#. module: product_variant_multi
#: field:product.variant.dimension.type,product_tmpl_id:0
#: field:product.variant.dimension.value,product_tmpl_id:0
msgid "Product Template"
msgstr "Product Template"

#. module: product_variant_multi
#: field:product.template,variant_model_name:0
msgid "Variant Model Name"
msgstr "Variant Model Name"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.action_dimension_value_form
msgid "Values"
msgstr "Values"

#. module: product_variant_multi
#: model:ir.module.module,shortdesc:product_variant_multi.module_meta_information
msgid "Products with multi-level variants"
msgstr "Products with multi-level variants"

#. module: product_variant_multi
#: view:product.product:0
#: field:product.variant.dimension.type,name:0
msgid "Dimension"
msgstr "Dimension"

#. module: product_variant_multi
#: view:product.template:0
#: view:product.variant.dimension.type:0
msgid "Variant Type"
msgstr "Variant Type"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.product_template
#: model:ir.ui.menu,name:product_variant_multi.menu_template
msgid "Product Templates"
msgstr "Product Templates"

#. module: product_variant_multi
#: model:ir.ui.menu,name:product_variant_multi.menu_variant_dimension
msgid "Variant Dimensions"
msgstr "Variant Dimensions"

#. module: product_variant_multi
#: field:product.variant.dimension.type,sequence:0
#: field:product.variant.dimension.value,sequence:0
msgid "Sequence"
msgstr "Sequence"

#. module: product_variant_multi
#: help:product.template,variant_model_name_separator:0
msgid "Add a separator between the elements of the variant name"
msgstr "Add a separator between the elements of the variant name"

#. module: product_variant_multi
#: model:ir.module.module,description:product_variant_multi.module_meta_information
msgid "OpenERP is already supporting a product variants at the core level. But\n"
"without this module, variants are only mono-axial. OpenERP indeed uses the product.tempate\n"
"as the model object and the product.variant as the instance variant.\n"
"Using this module, you can now easily deal with multi-axial variants.\n"
"A product.template, now has a set of dimensions (like Color, Size, anything you want).\n"
"For each dimension, a product.template has a set of dimension values (like Red, Green\n"
"for the Color dimension). For each dimension, you can accept or not custom dimension\n"
"values. The sale interface product configurator will take it into account.\n"
"Once the product.template is set up, you can use a 'generator' button that will populate\n"
"the space of the variants. You could also choose to populate only some combinations\n"
"by hand instead.\n"
"Each variant can have an extra price that will be taken into account when computing\n"
"the base listed price. Yet to be implemented: a price extra per variant dimension value.\n"
"Finally, this module is better used along with the product_variant_configurator which\n"
"will help the salesman selecting the appropriate variant in the sale order line\n"
"using dimension criteria instead of having to crawl the full space of variants.\n"
"    "
msgstr "OpenERP is already supporting a product variants at the core level. But\n"
"without this module, variants are only mono-axial. OpenERP indeed uses the product.tempate\n"
"as the model object and the product.variant as the instance variant.\n"
"Using this module, you can now easily deal with multi-axial variants.\n"
"A product.template, now has a set of dimensions (like Color, Size, anything you want).\n"
"For each dimension, a product.template has a set of dimension values (like Red, Green\n"
"for the Color dimension). For each dimension, you can accept or not custom dimension\n"
"values. The sale interface product configurator will take it into account.\n"
"Once the product.template is set up, you can use a 'generator' button that will populate\n"
"the space of the variants. You could also choose to populate only some combinations\n"
"by hand instead.\n"
"Each variant can have an extra price that will be taken into account when computing\n"
"the base listed price. Yet to be implemented: a price extra per variant dimension value.\n"
"Finally, this module is better used along with the product_variant_configurator which\n"
"will help the salesman selecting the appropriate variant in the sale order line\n"
"using dimension criteria instead of having to crawl the full space of variants.\n"
"    "

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_variant_dimension_type
#: field:product.variant.dimension.value,dimension_id:0
msgid "Dimension Type"
msgstr "Dimension Type"

#. module: product_variant_multi
#: view:product.product:0
msgid "Price"
msgstr "Price"

